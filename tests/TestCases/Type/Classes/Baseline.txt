Type.registerNamespace('TypeTests');

////////////////////////////////////////////////////////////////////////////////
// TypeTests.FooBarBaz

TypeTests.FooBarBaz = function TypeTests_FooBarBaz() {
}


////////////////////////////////////////////////////////////////////////////////
// TypeTests.MyClass

TypeTests.MyClass = function TypeTests_MyClass() {
    TypeTests.FooBarBaz = new TypeTests.FooBarBaz();
}


////////////////////////////////////////////////////////////////////////////////
// TypeTests.MyClass2

TypeTests.MyClass2 = function TypeTests_MyClass2() {
    TypeTests.MyClass2.initializeBase(this);
}


////////////////////////////////////////////////////////////////////////////////
// TypeTests.MyClass3

TypeTests.MyClass3 = function TypeTests_MyClass3() {
}


////////////////////////////////////////////////////////////////////////////////
// TypeTests.MyClass4

TypeTests.MyClass4 = function TypeTests_MyClass4() {
    TypeTests.MyClass4.initializeBase(this);
}


TypeTests.FooBarBaz.registerClass('TypeTests.FooBarBaz');
TypeTests.MyClass.registerClass('TypeTests.MyClass');
TypeTests.MyClass2.registerClass('TypeTests.MyClass2', TypeTests.MyClass);
TypeTests.MyClass3.registerClass('TypeTests.MyClass3', null, ss.IDisposable);
TypeTests.MyClass4.registerClass('TypeTests.MyClass4', TypeTests.MyClass, ss.IDisposable);
