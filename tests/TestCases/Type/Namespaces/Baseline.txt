define('test', ['ss'], function(ss) {
  'use strict';
  var $global = this;

  // TypeTests.Sub1.Sub2.MyClass

  function TypeTests$Sub1$Sub2$MyClass() {
    var yc = new TypeTests$Sub1$YourClass();
    yc.run();
  }
  var TypeTests$Sub1$Sub2$MyClass$ = {

  };


  // TypeTests.Sub1.YourClass

  function TypeTests$Sub1$YourClass() {
  }
  var TypeTests$Sub1$YourClass$ = {
    run: function() {
    }
  };


  // TypeTests.YourClass1

  function TypeTests$YourClass1() {
  }
  var TypeTests$YourClass1$ = {

  };


  // MyApp.Foo.MyClassF

  function MyApp$Foo$MyClassF() {
  }
  var MyApp$Foo$MyClassF$ = {

  };


  // MyApp.Test

  function MyApp$Test() {
    var c = new TypeTests$Sub1$Sub2$MyClass();
  }
  var MyApp$Test$ = {

  };


  // MyCompany.Utility

  function MyCompany$Utility() {
  }
  var MyCompany$Utility$ = {
    run: function() {
    }
  };


  // MyCompany.MyProduct.UtilityP

  function MyCompany$MyProduct$UtilityP() {
  }
  var MyCompany$MyProduct$UtilityP$ = {

  };


  // MyCompany.MyProduct.MyComponent.Component

  function MyCompany$MyProduct$MyComponent$Component() {
    var u = new MyCompany$Utility();
    u.run();
  }
  var MyCompany$MyProduct$MyComponent$Component$ = {

  };


  var $test = ss.module('test', null,
    {
      MyClass: [ TypeTests$Sub1$Sub2$MyClass, TypeTests$Sub1$Sub2$MyClass$, null ],
      YourClass: [ TypeTests$Sub1$YourClass, TypeTests$Sub1$YourClass$, null ],
      YourClass1: [ TypeTests$YourClass1, TypeTests$YourClass1$, null ],
      MyClassF: [ MyApp$Foo$MyClassF, MyApp$Foo$MyClassF$, null ],
      Test: [ MyApp$Test, MyApp$Test$, null ],
      Utility: [ MyCompany$Utility, MyCompany$Utility$, null ],
      UtilityP: [ MyCompany$MyProduct$UtilityP, MyCompany$MyProduct$UtilityP$, null ],
      Component: [ MyCompany$MyProduct$MyComponent$Component, MyCompany$MyProduct$MyComponent$Component$, null ]
    });


  return $test;
});
