Type.registerNamespace('My.App');

////////////////////////////////////////////////////////////////////////////////
// My.App.AppFeature

My.App.AppFeature = function My_App_AppFeature(name) {
    this._name = name;
    this._feature = new Lib.Feature(name);
}
My.App.AppFeature.prototype = {
    _name: null,
    _feature: null,
    
    get_name: function My_App_AppFeature$get_name() {
        return this._name;
    },
    set_name: function My_App_AppFeature$set_name(value) {
        this._name = value;
        return value;
    }
}


////////////////////////////////////////////////////////////////////////////////
// My.App.MyApp

My.App.MyApp = function My_App_MyApp(name, appFeatureName, libName, libFeatureName) {
    this._name = name;
    this._appfeature = new My.App.AppFeature(appFeatureName);
    this._lib = new Lib.MyLib('lib1', libName);
    this._lib.set_feature(new Lib.Feature(libFeatureName));
}
My.App.MyApp.prototype = {
    _name: null,
    _appfeature: null,
    _lib: null,
    
    get_name: function My_App_MyApp$get_name() {
        return this._name;
    },
    
    get_lib: function My_App_MyApp$get_lib() {
        return this._lib;
    },
    set_lib: function My_App_MyApp$set_lib(value) {
        this._lib = value;
        return value;
    }
}


////////////////////////////////////////////////////////////////////////////////
// My.App.Foo

My.App.Foo = function My_App_Foo() {
}


My.App.AppFeature.registerClass('My.App.AppFeature');
My.App.MyApp.registerClass('My.App.MyApp');
My.App.Foo.registerClass('My.App.Foo');
