Type.registerNamespace('My.Lib');

////////////////////////////////////////////////////////////////////////////////
// My.Lib.Feature

My.Lib.Feature = function My_Lib_Feature(name) {
    this._name = name;
}
My.Lib.Feature.prototype = {
    _name: null,
    
    get_name: function My_Lib_Feature$get_name() {
        return this._name;
    },
    set_name: function My_Lib_Feature$set_name(value) {
        this._name = value;
        return value;
    }
}


////////////////////////////////////////////////////////////////////////////////
// My.Lib.MyLib

My.Lib.MyLib = function My_Lib_MyLib(name, featureName) {
    this._name = name;
    this._feature = new My.Lib.Feature(featureName);
}
My.Lib.MyLib.prototype = {
    _name: null,
    _feature: null,
    
    get_name: function My_Lib_MyLib$get_name() {
        return this._name;
    },
    
    get_feature: function My_Lib_MyLib$get_feature() {
        return this._feature;
    },
    set_feature: function My_Lib_MyLib$set_feature(value) {
        this._feature = value;
        return value;
    }
}


My.Lib.Feature.registerClass('My.Lib.Feature');
My.Lib.MyLib.registerClass('My.Lib.MyLib');
