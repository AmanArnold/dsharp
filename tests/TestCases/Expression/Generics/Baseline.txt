define('test', ['ss', 'jQuery'], function(ss, jQuery) {
  'use strict';

  // ExpressionTests.Foo

  function ExpressionTests$Foo() {
    this._numbers = [];
    var s = this._numbers[10].toString(10);
    var s2 = this._numbers.getEnumerator().current.toString(10);
    var s3 = this._numbers.reduce(function(accumulated, item) {
      return accumulated + item;
    }, 0).toString(10);
    var s4 = encodeURIComponent(this._func(10));
    var f2 = this._func;
    f2(11).trim();
    var d = {};
    var s5 = $.extend(d, d)['abc'].toString(10);
    var keys = Object.getKeyCount(d);
    var b = Object.keyExists(d, 'abc');
    delete d.abc;
    var $dict1 = d;
    for (var $key2 in $dict1) {
      var de = { key: $key2, value: $dict1[$key2] };
    }
    $.ajax('http://example.com').success(function(html) {
      alert(html);
    });
    var json = '';
    var f = JSON.parse(json).setup().run().cleanup();
    var name = document.getElementById('nameTB').value;
  }
  var ExpressionTests$Foo$ = {
    cleanup: function() {
      return this;
    },
    run: function() {
      return this;
    },
    setup: function() {
      return this;
    }
  };


  var $test = ss.module('test', null,
    {
      Foo: [ ExpressionTests$Foo, ExpressionTests$Foo$, null ]
    });


  return $test;
});
