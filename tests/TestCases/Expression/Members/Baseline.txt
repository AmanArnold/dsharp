"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // ExpressionTests.IFoo

  function ExpressionTests$IFoo() { }


  // ExpressionTests.BApp

  function ExpressionTests$BApp() {
  }
  var ExpressionTests$BApp$ = {

  };


  // ExpressionTests.App

  function ExpressionTests$App() {
    this._value$1 = 0;
    this._value2 = 0;
    ExpressionTests$BApp.call(this);
  }
  var ExpressionTests$App$ = {
    get_XYZ: function() {
      return 1;
    },
    set_XYZ: function(value) {
      return value;
    },
    test: function(arg) {
      var s = '';
      var n = s.length;
      var n2 = Number.MAX_VALUE;
      var m = 0;
      n = this.get_XYZ();
      n = this.get_XYZ();
      this.set_XYZ(n);
      this.set_XYZ(n);
      var a;
      n = a.get_XYZ();
      a.set_XYZ(n);
      n = this._value$1;
      n = this._value$1;
      this._value$1 = n;
      this._value$1 = n;
      n = ExpressionTests$App._myDefault$1;
      n = ExpressionTests$App._myDefault$1;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
    }
  };


  // ExpressionTests.DApp

  function ExpressionTests$DApp() {
    ExpressionTests$App.call(this);
  }
  var ExpressionTests$DApp$ = {
    test2: function() {
      var n = this.get_XYZ();
      n = this.get_XYZ();
      n = ExpressionTests$App$.get_XYZ.call(this);
      this.set_XYZ(n);
      this.set_XYZ(n);
      ExpressionTests$App$.set_XYZ.call(this, n);
      this._value2 = n;
      this._value2 = n;
      this._value2 = n;
      n = ExpressionTests$App.myDefault2;
      n = ExpressionTests$App.myDefault2;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
    },
    test3: function() {
      var i = [ 1, 2 ];
      i[0] = 1;
      i[1] = i[0];
      i[i[0]] = 20;
    },
    test4: function(foo) {
      foo.bar();
    }
  };


  var $test = ss.module('test', null,
    {
      IFoo: [ ExpressionTests$IFoo ],
      BApp: [ ExpressionTests$BApp, ExpressionTests$BApp$, null ],
      App: [ ExpressionTests$App, ExpressionTests$App$, ExpressionTests$BApp ],
      DApp: [ ExpressionTests$DApp, ExpressionTests$DApp$, ExpressionTests$App ]
    });

  ExpressionTests$BApp.myConstant = 3;
  ExpressionTests$App.myConstant2 = 3;
  ExpressionTests$App._myDefault$1 = 1;
  ExpressionTests$App.myDefault2 = 2;

  return $test;
});
