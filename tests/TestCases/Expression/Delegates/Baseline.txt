Type.registerNamespace('ExpressionTests');

////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.EventArgs

ExpressionTests.EventArgs = function() {
}


////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.SomeClass

ExpressionTests.SomeClass = function(handler) {
}


////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.Test

ExpressionTests.Test = function() {
    this._handler = ss.Delegate.create(this, this.onEvent);
    this._handler = ss.Delegate.create(this, this.onEvent);
    this._handler = ss.Delegate.create(this, this.onEvent);
    this._handler = ExpressionTests.Test2.onGlobalEvent;
    var s1 = new ExpressionTests.SomeClass(ss.Delegate.create(this, this.onEvent));
    var s2 = new ExpressionTests.SomeClass(this._handler);
}
ExpressionTests.Test.prototype = {
    _handler: null,
    
    doStuff: function() {
        if (this._handler != null) {
            this._handler(this, null);
        }
    },
    
    onEvent: function(sender, e) {
    }
}


////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.Test2

ExpressionTests.Test2 = function() {
}
ExpressionTests.Test2.onGlobalEvent = function(sender, e) {
}


ExpressionTests.EventArgs.registerClass('ExpressionTests.EventArgs');
ExpressionTests.SomeClass.registerClass('ExpressionTests.SomeClass');
ExpressionTests.Test.registerClass('ExpressionTests.Test');
ExpressionTests.Test2.registerClass('ExpressionTests.Test2');
