Type.registerNamespace('ExpressionTests');

////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.Foo

ExpressionTests.Foo = function(i, j) {
}
ExpressionTests.Foo.prototype = {
    
    toString: function() {
        return 'Foo';
    },
    
    sum: function(i) {
        return 0;
    }
}


////////////////////////////////////////////////////////////////////////////////
// ExpressionTests.Bar

ExpressionTests.Bar = function(i, j, f) {
    ExpressionTests.Bar.initializeBase(this, [ i, j ]);
}
ExpressionTests.Bar.prototype = {
    
    sum: function() {
        return ExpressionTests.Bar.callBaseMethod(this, 'sum', [ 1 ]) + 1;
    },
    
    toString: function() {
        return ExpressionTests.Bar.callBaseMethod(this, 'toString') + ' -> Bar';
    }
}


ExpressionTests.Foo.registerClass('ExpressionTests.Foo');
ExpressionTests.Bar.registerClass('ExpressionTests.Bar', ExpressionTests.Foo);
